/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"

using namespace gin;

//==============================================================================
CompressorAudioProcessorEditor::CompressorAudioProcessorEditor (CompressorAudioProcessor& p)
    : GinAudioProcessorEditor (p), proc (p)
{
    for (auto pp : p.getPluginParameters())
    {
        ParamComponent* pc;
        
        if (pp->isOnOff())
            pc = new Switch (pp);
        else
            pc = new Knob (pp);
        
        addAndMakeVisible (pc);
        controls.add (pc);
    }
    
    setGridSize (8, 1);
}

CompressorAudioProcessorEditor::~CompressorAudioProcessorEditor()
{
}

//==============================================================================
void CompressorAudioProcessorEditor::resized()
{
    GinAudioProcessorEditor::resized();

    componentForParam (*proc.input)->setBounds (getGridArea (0, 0));
    componentForParam (*proc.attack)->setBounds (getGridArea (1, 0));
    componentForParam (*proc.hold)->setBounds (getGridArea (2, 0));
    componentForParam (*proc.release)->setBounds (getGridArea (3, 0));
    componentForParam (*proc.ratio)->setBounds (getGridArea (4, 0));
    componentForParam (*proc.threshold)->setBounds (getGridArea (5, 0));
    componentForParam (*proc.knee)->setBounds (getGridArea (6, 0));
    componentForParam (*proc.output)->setBounds (getGridArea (7, 0));
}
