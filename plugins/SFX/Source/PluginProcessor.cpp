/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"
#include "Voice.h"

using namespace gin;

//==============================================================================
SFXAudioProcessor::SFXAudioProcessor()
{
    for (int i = 0; i < 16; i++)
        pads.add (new Pad());
    
    for (int i = 0; i < 32; i++)
        addVoice (new Voice (*this));
}

SFXAudioProcessor::~SFXAudioProcessor()
{
}

//==============================================================================
void SFXAudioProcessor::stateUpdated()
{
}

void SFXAudioProcessor::updateState()
{
}

//==============================================================================
void SFXAudioProcessor::prepareToPlay (double sampleRate, int samplesPerBlock)
{
    setCurrentPlaybackSampleRate (sampleRate);
}

void SFXAudioProcessor::releaseResources()
{
}

void SFXAudioProcessor::processBlock (AudioSampleBuffer& buffer, MidiBuffer& midi)
{
    ScopedLock sl (lock);
    
    ScopedNoDenormals noDenormals;
    
    renderNextBlock (buffer, midi, 0, buffer.getNumSamples());
    
}

//==============================================================================
bool SFXAudioProcessor::hasEditor() const
{
    return true;
}

AudioProcessorEditor* SFXAudioProcessor::createEditor()
{
    editor = new SFXAudioProcessorEditor (*this);
    return editor;
}

//==============================================================================
// This creates new instances of the plugin..
AudioProcessor* JUCE_CALLTYPE createPluginFilter()
{
    return new SFXAudioProcessor();
}
